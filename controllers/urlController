const bcrypt = require('bcrypt');
const jwt = require('jsonwebtoken');

const Url = require('../models/url');

const createUrl = async (req, res) => {
    try {
        let { originalUrl, shortUrl, name } = req.body;

        if (!originalUrl || !shortUrl) return res.status(400).json({ 'message': 'Original and Shorten URL is required.' });
        if (!name) name = "";
        const existingUrl = await Url.findOne({ where: { shortUrl } });
        if (existingUrl) {
            return res.status(400).json({ 'message': 'This shortened Url already exists.' });
        }

        const url = await Url.create({ originalUrl, shortUrl, name });
        res.json(url);
        //res.status(200).json({"message": "Create account success."});
    } catch (error) {
        res.status(500).json({"error": error.message});
    }
};


const getAllUrls= async (req, res) => {
    try {
        const urls = await Url.findAll();
        res.json(urls);
    } catch (error) {
        res.status(500).send(error.message);
    }
};


const redirectUrl = async (req, res) => {
    let shortUrl = req.params[0];
    
    shortUrl = shortUrl.replace(/^\/+/, '');
    
    try {
        const url = await Url.findOne({ where: { shortUrl } });

        if (url) {
            res.redirect(url.originalUrl);
        } else {
            res.status(404).json({ error: 'Short URL not found.' });
        }
    } catch (error) {
        console.error('Error fetching URL:', error);
        res.status(500).json({ error: 'Internal server error' });
    }
};


module.exports = {
    createUrl,
    redirectUrl,
    getAllUrls
}